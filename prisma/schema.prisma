// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Users {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  clientId       String
  token          String
  phoneNumber    String
  sessions       Sessions[]
  accountDetails AccountDetails[]
}

model Sessions {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  userId         String          @db.ObjectId
  user           Users           @relation(fields: [userId], references: [id])
  ticketRaised   Boolean         @default(false)
  state          Int             @default(0)
  ratings        Int?
  inputsNeeded   String[]
  inputsGiven    String[]
  accountDetails AccountDetails?
}

model Messages {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  userId             String   @db.ObjectId
  sessionId          String   @db.ObjectId
  languageDetected   String
  sender             String
  message            String
  messageTranslation String
  audioFile          String
  options            String[]
  timeStamp          DateTime
}

model TransactionDetails {
  id                     String         @id @default(auto()) @map("_id") @db.ObjectId
  accountDetails         AccountDetails @relation(fields: [accountDetailsId], references: [id])
  complaintId            String
  transactionId          String
  startDate              DateTime
  endDate                DateTime
  amount                 Int
  transactionType        String
  transactionTimeBank    DateTime
  transactionDescription String
  helperText             String
  accountDetailsId       String         @db.ObjectId
}

model AccountDetails {
  id                 String               @id @default(auto()) @map("_id") @db.ObjectId
  userId             String               @unique @db.ObjectId
  user               Users                @relation(fields: [userId], references: [id])
  sessionId          String               @unique @db.ObjectId
  session            Sessions             @relation(fields: [sessionId], references: [id])
  accountName        String
  accountNumber      String
  customerId         String
  transacitonDetails TransactionDetails[]
  bankDetails        BankDetails?         @relation(fields: [bankDetailsId], references: [id])
  bankDetailsId      String?              @db.ObjectId
}

model BankDetails {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  BankName       String
  secretKey      String
  AccountDetails AccountDetails[]
}
